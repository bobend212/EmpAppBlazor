// <auto-generated />
using System;
using EmpAppBlazor.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmpAppBlazor.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220404112733_AddUserEntity")]
    partial class AddUserEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmpAppBlazor.Shared.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkloadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkloadId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeliveryDate = new DateTime(2022, 4, 9, 13, 27, 33, 442, DateTimeKind.Local).AddTicks(9079),
                            Description = "",
                            Name = "Tomason",
                            Number = 17156,
                            Site = "Self-Build",
                            WorkloadId = 1
                        },
                        new
                        {
                            Id = 2,
                            DeliveryDate = new DateTime(2022, 5, 9, 13, 27, 33, 442, DateTimeKind.Local).AddTicks(9090),
                            Description = "",
                            Name = "Ellesar",
                            Number = 14104,
                            Site = "Self-Build",
                            WorkloadId = 2
                        },
                        new
                        {
                            Id = 3,
                            DeliveryDate = new DateTime(2022, 4, 8, 13, 27, 33, 442, DateTimeKind.Local).AddTicks(9098),
                            Description = "This project is on hold now.",
                            Name = "Clark",
                            Number = 21201,
                            Site = "KTS",
                            WorkloadId = 3
                        });
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.Workload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workloads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DueDate = new DateTime(2022, 7, 13, 13, 27, 33, 442, DateTimeKind.Local).AddTicks(8804),
                            Stage = "active"
                        },
                        new
                        {
                            Id = 2,
                            DueDate = new DateTime(2022, 9, 1, 13, 27, 33, 442, DateTimeKind.Local).AddTicks(8859),
                            Stage = "hold"
                        },
                        new
                        {
                            Id = 3,
                            DueDate = new DateTime(2022, 10, 21, 13, 27, 33, 442, DateTimeKind.Local).AddTicks(8866),
                            Stage = "done"
                        });
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.Project", b =>
                {
                    b.HasOne("EmpAppBlazor.Shared.Workload", "Workload")
                        .WithMany()
                        .HasForeignKey("WorkloadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workload");
                });
#pragma warning restore 612, 618
        }
    }
}
