// <auto-generated />
using System;
using EmpAppBlazor.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmpAppBlazor.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220428092202_TaskItemEntityUpdate")]
    partial class TaskItemEntityUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmpAppBlazor.Shared.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tomason",
                            Number = 17156,
                            Site = "Self-Build",
                            Status = ""
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ellesar",
                            Number = 14104,
                            Site = "Self-Build",
                            Status = ""
                        },
                        new
                        {
                            Id = 3,
                            Name = "Clark",
                            Number = 21201,
                            Site = "KTS",
                            Status = ""
                        });
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.TaskItem", b =>
                {
                    b.Property<int>("TaskItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskItemId"), 1L, 1);

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEdited")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EditorId")
                        .HasColumnType("int");

                    b.Property<string>("Importance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("TaskStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskItemId");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("EditorId");

                    b.HasIndex("ProjectId");

                    b.ToTable("TaskItems");
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.UserProject", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("UserProjects");
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.Workload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DesignLeaderId")
                        .HasColumnType("int");

                    b.Property<int?>("EditorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductionStage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DesignLeaderId");

                    b.HasIndex("EditorId");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("Workloads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comments = "",
                            DeliveryDate = new DateTime(2022, 5, 10, 11, 22, 2, 271, DateTimeKind.Local).AddTicks(7598),
                            OrderPlaced = new DateTime(2022, 5, 2, 11, 22, 2, 271, DateTimeKind.Local).AddTicks(7639),
                            ProductionStage = "Not Started",
                            ProjectId = 1,
                            RequiredDate = new DateTime(2022, 6, 12, 11, 22, 2, 271, DateTimeKind.Local).AddTicks(7637)
                        },
                        new
                        {
                            Id = 2,
                            Comments = "",
                            DeliveryDate = new DateTime(2022, 6, 21, 11, 22, 2, 271, DateTimeKind.Local).AddTicks(7641),
                            OrderPlaced = new DateTime(2022, 6, 29, 11, 22, 2, 271, DateTimeKind.Local).AddTicks(7645),
                            ProductionStage = "Not Started",
                            ProjectId = 2,
                            RequiredDate = new DateTime(2022, 5, 23, 11, 22, 2, 271, DateTimeKind.Local).AddTicks(7644)
                        },
                        new
                        {
                            Id = 3,
                            Comments = "",
                            DeliveryDate = new DateTime(2022, 7, 9, 11, 22, 2, 271, DateTimeKind.Local).AddTicks(7648),
                            OrderPlaced = new DateTime(2022, 5, 4, 11, 22, 2, 271, DateTimeKind.Local).AddTicks(7651),
                            ProductionStage = "Not Started",
                            ProjectId = 3,
                            RequiredDate = new DateTime(2022, 6, 22, 11, 22, 2, 271, DateTimeKind.Local).AddTicks(7649)
                        });
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.TaskItem", b =>
                {
                    b.HasOne("EmpAppBlazor.Shared.Auth.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.HasOne("EmpAppBlazor.Shared.Auth.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpAppBlazor.Shared.Auth.User", "Editor")
                        .WithMany()
                        .HasForeignKey("EditorId");

                    b.HasOne("EmpAppBlazor.Shared.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("AssignedTo");

                    b.Navigation("Author");

                    b.Navigation("Editor");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.UserProject", b =>
                {
                    b.HasOne("EmpAppBlazor.Shared.Project", "Project")
                        .WithMany("UserProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpAppBlazor.Shared.Auth.User", "User")
                        .WithMany("UserProjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.Workload", b =>
                {
                    b.HasOne("EmpAppBlazor.Shared.Auth.User", "DesignLeader")
                        .WithMany()
                        .HasForeignKey("DesignLeaderId");

                    b.HasOne("EmpAppBlazor.Shared.Auth.User", "Editor")
                        .WithMany()
                        .HasForeignKey("EditorId");

                    b.HasOne("EmpAppBlazor.Shared.Project", "Project")
                        .WithOne("Workload")
                        .HasForeignKey("EmpAppBlazor.Shared.Workload", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DesignLeader");

                    b.Navigation("Editor");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.Auth.User", b =>
                {
                    b.Navigation("UserProjects");
                });

            modelBuilder.Entity("EmpAppBlazor.Shared.Project", b =>
                {
                    b.Navigation("UserProjects");

                    b.Navigation("Workload");
                });
#pragma warning restore 612, 618
        }
    }
}
