@using System.Globalization
@using System.Security.Claims
@inject ISnackbar Snackbar
@inject IWorkloadServiceClient WorkloadService
@inject NavigationManager NavigationManager
@inject IProjectServiceClient ProjectService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserServiceClient UserService

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3 mb-n1" />
            Edit Workload for @workload.Project.Number
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem xs="6">
                <MudSelect @bind-Value="@workload.ProductionStage" Label="Production Stage" Margin="Margin.Dense" Variant="Variant.Outlined">
                    <MudSelectItem Value="@("Not Started")"><MudIcon Icon="@Icons.Filled.StopCircle" Color="Color.Default" /> Not Started </MudSelectItem>
                    <MudSelectItem Value="@("In Progress")"><MudIcon Icon="@Icons.Filled.Work" Color="Color.Success" /> In Progress </MudSelectItem>
                    <MudSelectItem Value="@("Done")"><MudIcon Icon="@Icons.Filled.Done" Color="Color.Info" /> Done </MudSelectItem>
                </MudSelect>

                <MudSelect class="mt-3" Margin="Margin.Dense" Label="Project" Variant="Variant.Outlined" @bind-Value="@workload.ProjectId">
                    @foreach (var project in ProjectService.Projects)
                    {
                        <MudSelectItem T=int Value="@project.Id">@(project.Number) @(project.Name)</MudSelectItem>
                    }
                </MudSelect>

                <MudSelect class="mt-3" Margin="Margin.Dense" Label="Design Leader" Variant="Variant.Outlined" @bind-Value="@workload.DesignLeaderId">
                    @foreach (var user in UserService.Users)
                    {
                        <MudSelectItem T=int? Value="@user.Id">@(user.Name) @(user.Surname)</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="6">
                <MudDatePicker class="mr-5" Label="Delivery Date" DateFormat="dd/MMMM/yyyy" Culture="@CultureInfo.GetCultureInfo("pl-pl")" @bind-Date="workload.DeliveryDate" />
                <MudDatePicker class="mr-5" Label="Required Date" DateFormat="dd/MMMM/yyyy" Culture="@CultureInfo.GetCultureInfo("pl-pl")" @bind-Date="workload.BregsRequired" />
                <MudDatePicker class="mr-5" Label="Order Placed" DateFormat="dd/MMMM/yyyy" Culture="@CultureInfo.GetCultureInfo("pl-pl")" @bind-Date="workload.OrderPlaced" />
            </MudItem>
            <MudTextField T="string" Label="Comments/description/notes" Variant="Variant.Outlined" Lines="5" @bind-Value="workload.Comments" />


        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Info" OnClick="UpdateWorkload">Submit</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public WorkloadGetDTO workload { get; set; } = new WorkloadGetDTO();

    int loggedUserId;

    protected override async Task OnParametersSetAsync()
    {
        await UserService.GetAllUsers();
        await ProjectService.GetProjects();
        var authstate = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        loggedUserId = Convert.ToInt32(authstate.User.FindFirst(ClaimTypes.NameIdentifier).Value);
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    async Task UpdateWorkload()
    {
        workload.EditorId = loggedUserId;
        await WorkloadService.UpdateWorkload(workload);
        MudDialog.Close(DialogResult.Ok(workload));
    }
}