@page "/task/list"
@inject ITaskItemServiceClient TaskItemService
@using System.Security.Claims
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudDropContainer T="TaskItem" Items="TaskItemService.TaskItems" ItemsSelector="@((item,dropzone) => item.TaskStatus == dropzone)" ItemDropped="ItemUpdated" Class="d-flex flex-wrap flex-grow-1">
    <ChildContent>
        <MudDropZone T="TaskItem" Identifier="not started" Class="rounded mud-background-gray pa-6 ma-8 flex-grow-1">
            <MudText Typo="Typo.h6" Class="mb-4">not started</MudText>
        </MudDropZone>
        <MudDropZone T="TaskItem" Identifier="active" Class="rounded mud-background-gray pa-6 ma-8 flex-grow-1">
            <MudText Typo="Typo.h6" Class="mb-4">active</MudText>
        </MudDropZone>
        <MudDropZone T="TaskItem" Identifier="done" Class="rounded mud-background-gray pa-6 ma-8 flex-grow-1">
            <MudText Typo="Typo.h6" Class="mb-4">done</MudText>
        </MudDropZone>
    </ChildContent>
    <ItemRenderer>
        <MudPaper Elevation="25" Class="pa-4 my-4">@context.TaskItemId - @context.Title</MudPaper>
    </ItemRenderer>
</MudDropContainer>

@code {
    TaskItem taskItem = new TaskItem();

    protected override async Task OnInitializedAsync()
    {
        //var authstate = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        //var loggedUserId = Convert.ToInt32(authstate.User.FindFirst(ClaimTypes.NameIdentifier).Value);
        //await TaskItemService.GetAllTaskItemsByUserId(loggedUserId);

        await TaskItemService.GetAllTaskItems();

    }

    private async Task ItemUpdated(MudItemDropInfo<TaskItem> dropItem)
    {
        dropItem.Item.TaskStatus = dropItem.DropzoneIdentifier;

        taskItem.TaskItemId = dropItem.Item.TaskItemId;
        taskItem.TaskStatus = dropItem.DropzoneIdentifier;
        taskItem = await TaskItemService.UpdateTaskItemStatus(taskItem);
    }
}



































@code {

}
